Dependency Injection
1) Constructor Injection
2) Property Injection
3) Method Injection


Singleton Rules
    /*
 * Class Should be sealed
 * Private Constructor
 * Static Instance 
 * Readonly property which return instance
 * (Optional : Thread Safe)
 * (Optional : Lazy Loading)
 */


Single Responsibility Principle (SRP):
A class should have only one reason to change, meaning it should have only one job or responsibility.

Open/Closed Principle (OCP):
Software entities (classes, modules, functions, etc.) should be open for extension but closed for modification.

Liskov Substitution Principle (LSP):
Objects of a superclass should be replaceable with objects of a subclass without affecting the correctness of the program.

Interface Segregation Principle (ISP):
A client should not be forced to depend on interfaces it does not use.

Dependency Inversion Principle (DIP):
High-level modules should not depend on low-level modules; both should depend on abstractions. 
Additionally, abstractions should not depend on details; details should depend on abstractions.